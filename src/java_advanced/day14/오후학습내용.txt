자료구조 (data structure)
대량의 데이터를 효율적으로 관리할 수 있는 데이터의 구조
개발자입장
코드상에서 효율적으로 데이터를 처리하기 위해서,
데이터의 특성에 따라 , 체계적으로 데이터를 구조화 해야 한다.
- 어떤 데이터 구조를 사용하느냐에 따라 코드 효율성이 달라진다.

알고리즘이란?
어떤 문제를 풀기 위한 절차/방법
어떤 문제에 대해, 특정한 입력 넣으면 , 원하는 출력을 얻을 수 있도록 만드는 프로그래밍

컬렉션
1) List 계열  (객체의 저장 순서가 있고, 중복 허용한다)
2) Set 계열   (저장 순서가 없고, 중복을 허용하지 않는다)

Map계열 (키를 가지고 값을 관리한다.) 키(중복X)와 값이 한쌍으로 관리된다.


자료구조
Queue 큐   : 줄을 서는 행위와 유사 하다  FIFO(First In First Out), LILO(LastIn, Last Out)
             가장 먼저 넣은 데이터를 가장 먼저 꺼낼 수 있다

 용어
 1. Enqueue : 큐에 데이터를 넣는 기능   -add(value) , offer(value)
 2. Dequeue : 큐에 데이터를 꺼내는 기능  - poll(), remove()
java 에서는 기본적으로 java.util.Queue 클래스 제공하고 있다.
















