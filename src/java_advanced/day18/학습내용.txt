스트림 파이프라인 개념

1. 데이터 소스 (리소스)
   스트림은 데이터를 처리하는데 사용할 수 있는 다양한 소스로부터 생성된다.
   이 데이터 소스는 컬렉션, 배열, 파일 , 등 다양한 형태이다.
2. 연속된 작업
   스트림은 중간 연산과 최종연산을 구성된다.
   중간 연산은 스트림을 반환하며, 여러 중간 연산을 연결할 수 있다.
   최종 연산은 스트림 파이프라인을 종료하고 결과를 생성한다.
3. 파이프라인
   스트림에서 제공하는 중간연산과 최종 연산을
   연결하여 데이터를 처리하는 구조를 파이프라인 이라고 한다.
4. 지연연산
   스트림은 지연연산을 지원한다.
   중간 연산들이 실제로 수행되기 전까지 스트림 파이프라인이 실행되지 않는다.
   필요한 연산만 수행해서 최적의 성능을 이끌어 내기 위함이다.
   최종 연산이 호출이 되면, 최종 결과를 생성하고 스트림이 해제된다.
   요런 특징 때문에 데이터 스트림을 메모리에 로드하지 않고 최적의 성능을 낼 수 있다.

 5. 순차 및 병렬 처리
    스트림은 순차적으로 처리할 수 있고,
    병렬(멀티 CPU)로도 처리될 수 있다.
 --------------------------------------------------------------------
 다양한 리소스로부터 스트림 얻는 방법을 알아본다.

 - java.util.Stream 패키지
   BaseStream  : 모든 스트림에서 사용할 수 있는 공통 메소드 정의
       |
   |---------------------|------------|---------------|
   Stream(객체요소 처리)  IntStream      LongStream      DoubleStream (각각 기본 타입인 int,long,double 요소 처리)

  1) 컬렉션으로부터 스트림 얻는 방법
    모든 컬렉션으로부터 객체 스트림을 얻을 수 있다.
---------------------------------------------------
  2) 배열로부터 스트림 얻는 방법
    java.util.Arrays 클래스 를 이용하면 다양한 종류의 배열로 부터 스트림을 얻어 낼 수 있다.
-------------------------------------------------
  3) 숫자 범위로 부터 스트림을 얻기
     IntStream , LongStream의 정적메소드 range() , rangeClosed() 메소드를 이용하면
     특정 범위의 정수 스트림을 얻을 수 있다.  첫번째 매개값은 시작 수, 두번째 매개값은 끝수
     끝수를 포함하지 않으려면 range(1,5) , 포함하려면 rangeClosed(1,5)